generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/// タグモデル: カテゴリのタグを格納
model Tags {
  id       String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name     String        @unique
  profiles ProfileTags[]

  @@map("tags")
}

/// プロフィールモデル: ユーザーの追加情報を格納
model Profiles {
  authId            String        @id @map("auth_id") @db.Uuid
  avatarImageUrl    String?       @map("avatar_image_url")
  name              String        @default("")
  gender            Genders       @default(male)
  selfIntroduction  String?       @default("") @map("self_introduction") @db.VarChar(200)
  isPrivate         Boolean       @default(true) @map("is_private")
  isProfileComplete Boolean       @default(false) @map("is_profile_complete")
  tags              ProfileTags[]

  @@map("profiles")
}

/// 中間テーブル: Profiles と Tags のリレーション
model ProfileTags {
  authId String   @map("auth_id") @db.Uuid
  tagId     String   @map("tag_id") @db.Uuid
  profile   Profiles @relation(fields: [authId], references: [authId])
  tag       Tags     @relation(fields: [tagId], references: [id])

  @@id([authId, tagId])
  @@map("profile_tags")
}

/// 性別の選択肢: male、female
enum Genders {
  male
  female
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// 性別の選択肢: male、female
enum Genders {
  male
  female
}


/// プロフィールモデル: ユーザーの追加情報を格納
model Profiles {
  /// プロフィールの一意なID (UUID)
  id                String   @id @default(uuid())
  /// ユーザーのアバター画像のURL。オプションフィールド。
  avatarImageUrl    String?  @map("avatar_image_url")
  /// ユーザーの表示名。255文字までの入力が可能。
  profileName       String   @default("") @map("profile_name")
  /// 性別の選択肢 (male, female) Enumを使用。
  gender            Genders  @default(male) @map("gender")
  /// 学習カテゴリ。任意のフィールドで255文字まで。
  learningCategory  String?  @map("learning_category")
  /// 自己紹介テキスト。任意のフィールド。
  selfIntroduction  String?  @map("self_introduction")
  /// プライバシー設定。デフォルトはfalse（公開）。
  isPrivate         Boolean  @default(false) @map("is_private")
  /// プロフィール設定が完了しているかのフラグ
  isProfileComplete Boolean @default(false) @map("is_profile_complete")
  /// このプロフィールが属するユーザーのID。auth.usersとの一意な関連。
  authId            String  @unique @map("auth_id")

  @@map("profiles")
}
